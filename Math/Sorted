long long fact(int a)
{
if(a<=1)return 1;
return ((a%1000003)*(fact(a-1)%1000003))%1000003;
}

long long inv(int a, int m)
{
long long m0 = m;
long long y = 0, x = 1;

if (m == 1) 
  return 0; 

while (a > 1) 
{ 
   
    long long q = a / m; 
    long long t = m; 

   
    m = a % m, a = t; 
    t = y; 

   
    y = x - q * y; 
    x = t; 
} 


if (x < 0) 
   x += m0; 

return x; 
}
int Solution::findRank(string A) {
vector<int>ch(130,0);

for(int i=0;i<A.size();i++)
{int ind=A[i];
   ch[ind]++;
}
// for(int i=64;i<100;i++)cout<<ch[i]<<" ";cout<<endl;
unordered_map<char,bool>mp;

long long ans=0;

for(int i=0;i<A.size();i++)
{
    int ct=0;
    for(int j=63;j<ch.size();j++)
    {
        if(j>=A[i])break;
        if(!mp[j]&&ch[j]){
            ch[j]--;
        
            int rt=1;
            for(int k=63;k<ch.size();k++)
            {
                if(!mp[k]&&ch[k]){
                     rt=((rt%1000003)*fact(ch[k]))%1000003;
                
                }
            }
            ch[j]++;
            ans+=fact(A.size()-i-1)*inv(rt,1000003);
            ans%=1000003;
        }
    }
   
    ch[A[i]]--;
   if(ch[A[i]]==0)mp[A[i]]=1;
     
}

return (ans+1)%1000003;
}



